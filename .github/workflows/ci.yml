name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Check coverage
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Build examples
      run: |
        go build -o bin/send_message ./examples/send_message
        go build -o bin/get_qr ./examples/get_qr
        go build -o bin/webhook_server ./examples/webhook_server
        go build -o bin/create_group ./examples/create_group
        go build -o bin/instance_management ./examples/instance_management

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
